"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/web3-eth-personal";
exports.ids = ["vendor-chunks/web3-eth-personal"];
exports.modules = {

/***/ "(ssr)/./node_modules/web3-eth-personal/lib/esm/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/web3-eth-personal/lib/esm/index.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Personal: () => (/* reexport safe */ _personal_js__WEBPACK_IMPORTED_MODULE_0__.Personal),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _personal_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./personal.js */ \"(ssr)/./node_modules/web3-eth-personal/lib/esm/personal.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * The `web3-eth-personal` package allows you to interact with the Ethereum node’s accounts.\n *\n * **_NOTE:_**  Many of these functions send sensitive information like passwords. Never call these functions over a unsecured Websocket or HTTP provider, as your password will be sent in plain text!\n *\n * import Personal from 'web3-eth-personal';\n *\n * const personal = new Personal('http://localhost:8545');\n *\n * or using the web3 umbrella package\n *\n * import Personal from 'web3-eth-personal';\n * const web3 = new Web3('http://localhost:8545');\n * // web3.eth.personal\n */\n/**\n * This comment _supports3_ [Markdown](https://marked.js.org/)\n */\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_personal_js__WEBPACK_IMPORTED_MODULE_0__.Personal);\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtcGVyc29uYWwvbGliL2VzbS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsMEJBQTBCO0FBQzFCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ3lDO0FBQ1g7QUFDOUIsaUVBQWUsa0RBQVEsRUFBQztBQUN4QiIsInNvdXJjZXMiOlsiRTpcXHdlYlxcV0VCM1xcd2ViM19zb2xpZGl0eV9jb250cmFjdF9leGFtcGxlXFxwdWJsaWNcXG5vZGVfbW9kdWxlc1xcd2ViMy1ldGgtcGVyc29uYWxcXGxpYlxcZXNtXFxpbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuVGhpcyBmaWxlIGlzIHBhcnQgb2Ygd2ViMy5qcy5cblxud2ViMy5qcyBpcyBmcmVlIHNvZnR3YXJlOiB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5XG5pdCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnlcbnRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sIGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlIExpY2Vuc2UsIG9yXG4oYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLlxuXG53ZWIzLmpzIGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsXG5idXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZlxuTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiAgU2VlIHRoZVxuR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuXG5cbllvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZVxuYWxvbmcgd2l0aCB3ZWIzLmpzLiAgSWYgbm90LCBzZWUgPGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+LlxuKi9cbi8qKlxuICogVGhlIGB3ZWIzLWV0aC1wZXJzb25hbGAgcGFja2FnZSBhbGxvd3MgeW91IHRvIGludGVyYWN0IHdpdGggdGhlIEV0aGVyZXVtIG5vZGXigJlzIGFjY291bnRzLlxuICpcbiAqICoqX05PVEU6XyoqICBNYW55IG9mIHRoZXNlIGZ1bmN0aW9ucyBzZW5kIHNlbnNpdGl2ZSBpbmZvcm1hdGlvbiBsaWtlIHBhc3N3b3Jkcy4gTmV2ZXIgY2FsbCB0aGVzZSBmdW5jdGlvbnMgb3ZlciBhIHVuc2VjdXJlZCBXZWJzb2NrZXQgb3IgSFRUUCBwcm92aWRlciwgYXMgeW91ciBwYXNzd29yZCB3aWxsIGJlIHNlbnQgaW4gcGxhaW4gdGV4dCFcbiAqXG4gKiBpbXBvcnQgUGVyc29uYWwgZnJvbSAnd2ViMy1ldGgtcGVyc29uYWwnO1xuICpcbiAqIGNvbnN0IHBlcnNvbmFsID0gbmV3IFBlcnNvbmFsKCdodHRwOi8vbG9jYWxob3N0Ojg1NDUnKTtcbiAqXG4gKiBvciB1c2luZyB0aGUgd2ViMyB1bWJyZWxsYSBwYWNrYWdlXG4gKlxuICogaW1wb3J0IFBlcnNvbmFsIGZyb20gJ3dlYjMtZXRoLXBlcnNvbmFsJztcbiAqIGNvbnN0IHdlYjMgPSBuZXcgV2ViMygnaHR0cDovL2xvY2FsaG9zdDo4NTQ1Jyk7XG4gKiAvLyB3ZWIzLmV0aC5wZXJzb25hbFxuICovXG4vKipcbiAqIFRoaXMgY29tbWVudCBfc3VwcG9ydHMzXyBbTWFya2Rvd25dKGh0dHBzOi8vbWFya2VkLmpzLm9yZy8pXG4gKi9cbmltcG9ydCB7IFBlcnNvbmFsIH0gZnJvbSAnLi9wZXJzb25hbC5qcyc7XG5leHBvcnQgKiBmcm9tICcuL3BlcnNvbmFsLmpzJztcbmV4cG9ydCBkZWZhdWx0IFBlcnNvbmFsO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-personal/lib/esm/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-personal/lib/esm/personal.js":
/*!************************************************************!*\
  !*** ./node_modules/web3-eth-personal/lib/esm/personal.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Personal: () => (/* binding */ Personal)\n/* harmony export */ });\n/* harmony import */ var web3_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-core */ \"(ssr)/./node_modules/web3-core/lib/esm/index.js\");\n/* harmony import */ var _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./rpc_method_wrappers.js */ \"(ssr)/./node_modules/web3-eth-personal/lib/esm/rpc_method_wrappers.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n/**\n * Eth Personal allows you to interact with the Ethereum node’s accounts.\n * For using Eth Personal package, first install Web3 package using: `npm i web3` or `yarn add web3` based on your package manager.\n * ```ts\n *\n *import { Web3 } from 'web3';\n *  const web3 = new Web3('http://127.0.0.1:7545');\n *\n *  console.log(await web3.eth.personal.getAccounts());\n *\n * ```\n * For using individual package install `web3-eth-personal` packages using: `npm i web3-eth-personal` or `yarn add web3-eth-personal`.\n *\n * ```ts\n * import {Personal} from 'web3-eth-personal';\n *\n * const personal = new Personal('http://127.0.0.1:7545');\n * console.log(await personal.getAccounts());\n * ```\n */\nclass Personal extends web3_core__WEBPACK_IMPORTED_MODULE_0__.Web3Context {\n    /**\n     *Returns a list of accounts the node controls by using the provider and calling the RPC method personal_listAccounts. Using `web3.eth.accounts.create()` will not add accounts into this list. For that use `web3.eth.personal.newAccount()`.\n     * @returns - An array of addresses controlled by the node.\n     * @example\n     * ```ts\n     *  const accounts = await personal.getAccounts();\n     * console.log(accounts);\n     * >\n     * [\n     * \t'0x79D7BbaC53C9aF700d0B250e9AE789E503Fcd6AE',\n     * \t'0xe2597eB05CF9a87eB1309e86750C903EC38E527e',\n     * \t'0x7eD0e85B8E1E925600B4373e6d108F34AB38a401',\n     * \t'0xE4bEEf667408b99053dC147Ed19592aDa0d77F59',\n     * \t'0x7AB80aeB6bb488B7f6c41c58e83Ef248eB39c882',\n     * \t'0x12B1D9d74d73b1C3A245B19C1C5501c653aF1af9',\n     * \t'0x1a6075A263Ee140e00Dbf8E374Fc5A443d097894',\n     * \t'0x4FEC0A51024B13030D26E70904B066C6d41157A5',\n     * \t'0x03095dc4857BB26f3a4550c5651Df8b7f6b6B1Ef',\n     * \t'0xac0B9b6e8A17991cb172B2ABAF45Fb5eb769E540'\n     * ]\n     * ```\n     */\n    getAccounts() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_1__.getAccounts(this.requestManager);\n        });\n    }\n    /**\n     * Creates a new account and returns its address.\n     * **_NOTE:_**  This function sends a sensitive information like password. Never call this function over a unsecured Websocket or HTTP provider, as your password will be sent in plain text!\n     * @param password - The password to encrypt the account with.\n     * @returns - The address of the new account.\n     * @example\n     * ```ts\n     * const addr = await web3.eth.personal.newAccount('password');\n     * console.log(addr);\n     * > '0x1234567891011121314151617181920212223456'\n     * ```\n     */\n    newAccount(password) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_1__.newAccount(this.requestManager, password);\n        });\n    }\n    /**\n     * Unlocks an account for a given duration.\n     * @param address - The address of the account to unlock.\n     * @param password - The password of the account to unlock.\n     * @param unlockDuration - The duration in seconds to unlock the account for.\n     * @example\n     * ```ts\n     * await personal.unlockAccount(\n     * \t\"0x0d4aa485ecbc499c70860feb7e5aaeaf5fd8172e\",\n     * \t\"123456\",\n     * \t600\n     * );\n     * ```\n     */\n    unlockAccount(address, password, unlockDuration) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_1__.unlockAccount(this.requestManager, address, password, unlockDuration);\n        });\n    }\n    /**\n     * Locks the given account\n     * @param address - The address of the account to lock.\n     * @returns - `true` if the account was locked, otherwise `false`.\n     * @example\n     * ```ts\n     * await personal.lockAccount(\n     * \t\"0x0d4aa485ecbc499c70860feb7e5aaeaf5fd8172e\"\n     * );\n     * ```\n     */\n    lockAccount(address) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_1__.lockAccount(this.requestManager, address);\n        });\n    }\n    /**\n     * Imports the given private key into the key store, encrypting it with the passphrase.\n     * @param keyData - An unencrypted private key (hex string).\n     * @param passphrase  - The password of the account\n     * @returns - The address of the new account.\n     * @example\n     * ```ts\n     * const accountAddress = await personal.importRawKey(\n     * \t\"abe40cb08850da918ee951b237fa87946499b2d8643e4aa12b0610b050c731f6\",\n     * \t\"123456\"\n     * );\n     *\n     * console.log(unlockTx);\n     * > 0x8727a8b34ec833154b72b62cac05d69f86eb6556\n     * ```\n     */\n    importRawKey(keyData, passphrase) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_1__.importRawKey(this.requestManager, keyData, passphrase);\n        });\n    }\n    /**\n     * This method sends a transaction over the management API.\n     * **_NOTE:_** Sending your account password over an unsecured HTTP RPC connection is highly unsecure.\n     * @param tx - The transaction options\n     * @param passphrase - The passphrase of the current account\n     * @returns - The transaction hash\n     * @example\n     * ```ts\n     * const txHash = personal\n     * .sendTransaction({\n     *  \tfrom: \"0x0d4aa485ecbc499c70860feb7e5aaeaf5fd8172e\",\n     * \tgasPrice: \"20000000000\",\n     * \tgas: \"21000\",\n     * \tto: \"0x3535353535353535353535353535353535353535\",\n     * \tvalue: \"1000000\",\n     * \tdata: \"\",\n     * \tnonce: 0,\n     * },\n     * \"123456\");\n     *\n     * console.log(txHash);\n     * > 0x9445325c3c5638c9fe425b003b8c32f03e9f99d409555a650a6838ba712bb51b\n     * ```\n     */\n    sendTransaction(tx, passphrase) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_1__.sendTransaction(this.requestManager, tx, passphrase, this.config);\n        });\n    }\n    /**\n     * Signs a transaction. This account needs to be unlocked.\n     * **_NOTE:_** Sending your account password over an unsecured HTTP RPC connection is highly unsecure.\n     * @param tx - The transaction data to sign. See sendTransaction  for more information.\n     * @param passphrase - The password of the `from` account, to sign the transaction with.\n     * @returns - The RLP encoded transaction. The `raw` property can be used to send the transaction using  sendSignedTransaction.\n     * @example\n     * ```ts\n     * const tx = personal\n     * .signTransaction({\n     * \tfrom: \"0x0d4aa485ecbc499c70860feb7e5aaeaf5fd8172e\",\n     * \tgasPrice: \"20000000000\",\n     * \tgas: \"21000\",\n     * \tto: \"0x3535353535353535353535353535353535353535\",\n     * \tvalue: \"1000000000000000000\",\n     * \tdata: \"\",\n     * \tnonce: 0,\n     * },\n     * \"123456\");\n     *\n     * console.log(tx);\n     *\n     * > {\n     * \traw: '0xf86e808504a817c800825208943535353535353535353535353535353535353535880de0b6b3a764000080820a95a0c951c03238fe930e6e69ab9d6af9f29248a514048e44884f0e60c4de40de3526a038b71399bf0c8925749ab79e91ce6cd2fc068c84c18ff6a197b48c4cbef01e00',\n     * \ttx: {\n     * \ttype: '0x0',\n     * \tnonce: '0x0',\n     * \tgasPrice: '0x4a817c800',\n     * \tmaxPriorityFeePerGas: null,\n     * \tmaxFeePerGas: null,\n     * \tgas: '0x5208',\n     * \tvalue: '0xde0b6b3a7640000',\n     * \tinput: '0x',\n     * \tv: '0xa95',\n     * \tr: '0xc951c03238fe930e6e69ab9d6af9f29248a514048e44884f0e60c4de40de3526',\n     * \ts: '0x38b71399bf0c8925749ab79e91ce6cd2fc068c84c18ff6a197b48c4cbef01e00',\n     * \tto: '0x3535353535353535353535353535353535353535',\n     * \thash: '0x65e3df790ab2a32068b13cff970b26445b8995229ae4abbed61bd996f09fce69'\n     * \t}\n     * }\n     * ```\n     */\n    signTransaction(tx, passphrase) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_1__.signTransaction(this.requestManager, tx, passphrase, this.config);\n        });\n    }\n    /**\n     * Calculates an Ethereum specific signature with:\n     * sign(keccak256(\"\\x19Ethereum Signed Message:\\n\" + dataToSign.length + dataToSign)))\n     * Adding a prefix to the message makes the calculated signature recognisable as an Ethereum specific signature.\n     *\n     * If you have the original message and the signed message, you can discover the signing account address using web3.eth.personal.ecRecover\n     * **_NOTE:_** Sending your account password over an unsecured HTTP RPC connection is highly unsecure.\n     * @param data - The data to sign.\n     * @param address - The address to sign with.\n     * @param passphrase - The passphrase to decrypt the account with.\n     * @returns - The signature.\n     * @example\n     * ```ts\n     * const sig = await personal.sign(\"Hello world\", \"0x0D4Aa485ECbC499c70860fEb7e5AaeAf5fd8172E\", \"123456\")\n     * console.log(sig)\n     * > 0x5d21d01b3198ac34d0585a9d76c4d1c8123e5e06746c8962318a1c08ffb207596e6fce4a6f377b7c0fc98c5f646cd73438c80e8a1a95cbec55a84c2889dca0301b\n     * ```\n     */\n    sign(data, address, passphrase) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_1__.sign(this.requestManager, data, address, passphrase);\n        });\n    }\n    /**\n     * Recovers the account that signed the data.\n     * @param signedData - Data that was signed. If String it will be converted using {@link utf8ToHex}\n     * @param signature - The signature\n     * @returns - The address of the account that signed the data.\n     * @example\n     * ```ts\n     *  const address = await personal.ecRecover(\n     * \t\"Hello world\",\n     * \t\"0x5d21d01b3198ac34d0585a9d76c4d1c8123e5e06746c8962318a1c08ffb207596e6fce4a6f377b7c0fc98c5f646cd73438c80e8a1a95cbec55a84c2889dca0301b\"\n     * );\n     * console.log(address);\n     * > 0x0d4aa485ecbc499c70860feb7e5aaeaf5fd8172e\n     * ```\n     */\n    ecRecover(signedData, signature) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return _rpc_method_wrappers_js__WEBPACK_IMPORTED_MODULE_1__.ecRecover(this.requestManager, signedData, signature);\n        });\n    }\n}\n//# sourceMappingURL=personal.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-personal/lib/esm/personal.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/web3-eth-personal/lib/esm/rpc_method_wrappers.js":
/*!***********************************************************************!*\
  !*** ./node_modules/web3-eth-personal/lib/esm/rpc_method_wrappers.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ecRecover: () => (/* binding */ ecRecover),\n/* harmony export */   getAccounts: () => (/* binding */ getAccounts),\n/* harmony export */   importRawKey: () => (/* binding */ importRawKey),\n/* harmony export */   lockAccount: () => (/* binding */ lockAccount),\n/* harmony export */   newAccount: () => (/* binding */ newAccount),\n/* harmony export */   sendTransaction: () => (/* binding */ sendTransaction),\n/* harmony export */   sign: () => (/* binding */ sign),\n/* harmony export */   signTransaction: () => (/* binding */ signTransaction),\n/* harmony export */   unlockAccount: () => (/* binding */ unlockAccount)\n/* harmony export */ });\n/* harmony import */ var web3_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-utils */ \"(ssr)/./node_modules/web3-utils/lib/esm/index.js\");\n/* harmony import */ var web3_eth__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-eth */ \"(ssr)/./node_modules/web3-eth/lib/esm/index.js\");\n/* harmony import */ var web3_types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! web3-types */ \"(ssr)/./node_modules/web3-types/lib/esm/index.js\");\n/* harmony import */ var web3_validator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! web3-validator */ \"(ssr)/./node_modules/web3-validator/lib/esm/index.js\");\n/* harmony import */ var web3_rpc_methods__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! web3-rpc-methods */ \"(ssr)/./node_modules/web3-rpc-methods/lib/esm/index.js\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n\n\n\nconst getAccounts = (requestManager) => __awaiter(void 0, void 0, void 0, function* () {\n    const result = yield web3_rpc_methods__WEBPACK_IMPORTED_MODULE_4__.personalRpcMethods.getAccounts(requestManager);\n    return result.map(web3_utils__WEBPACK_IMPORTED_MODULE_0__.toChecksumAddress);\n});\nconst newAccount = (requestManager, password) => __awaiter(void 0, void 0, void 0, function* () {\n    web3_validator__WEBPACK_IMPORTED_MODULE_3__.validator.validate(['string'], [password]);\n    const result = yield web3_rpc_methods__WEBPACK_IMPORTED_MODULE_4__.personalRpcMethods.newAccount(requestManager, password);\n    return (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.toChecksumAddress)(result);\n});\nconst unlockAccount = (requestManager, address, password, unlockDuration) => __awaiter(void 0, void 0, void 0, function* () {\n    web3_validator__WEBPACK_IMPORTED_MODULE_3__.validator.validate(['address', 'string', 'uint'], [address, password, unlockDuration]);\n    return web3_rpc_methods__WEBPACK_IMPORTED_MODULE_4__.personalRpcMethods.unlockAccount(requestManager, address, password, unlockDuration);\n});\nconst lockAccount = (requestManager, address) => __awaiter(void 0, void 0, void 0, function* () {\n    web3_validator__WEBPACK_IMPORTED_MODULE_3__.validator.validate(['address'], [address]);\n    return web3_rpc_methods__WEBPACK_IMPORTED_MODULE_4__.personalRpcMethods.lockAccount(requestManager, address);\n});\nconst importRawKey = (requestManager, keyData, passphrase) => __awaiter(void 0, void 0, void 0, function* () {\n    web3_validator__WEBPACK_IMPORTED_MODULE_3__.validator.validate(['string', 'string'], [keyData, passphrase]);\n    return web3_rpc_methods__WEBPACK_IMPORTED_MODULE_4__.personalRpcMethods.importRawKey(requestManager, keyData, passphrase);\n});\nconst sendTransaction = (requestManager, tx, passphrase, config) => __awaiter(void 0, void 0, void 0, function* () {\n    const formattedTx = (0,web3_eth__WEBPACK_IMPORTED_MODULE_1__.formatTransaction)(tx, web3_types__WEBPACK_IMPORTED_MODULE_2__.ETH_DATA_FORMAT, {\n        transactionSchema: config === null || config === void 0 ? void 0 : config.customTransactionSchema,\n    });\n    return web3_rpc_methods__WEBPACK_IMPORTED_MODULE_4__.personalRpcMethods.sendTransaction(requestManager, formattedTx, passphrase);\n});\nconst signTransaction = (requestManager, tx, passphrase, config) => __awaiter(void 0, void 0, void 0, function* () {\n    const formattedTx = (0,web3_eth__WEBPACK_IMPORTED_MODULE_1__.formatTransaction)(tx, web3_types__WEBPACK_IMPORTED_MODULE_2__.ETH_DATA_FORMAT, {\n        transactionSchema: config === null || config === void 0 ? void 0 : config.customTransactionSchema,\n    });\n    return web3_rpc_methods__WEBPACK_IMPORTED_MODULE_4__.personalRpcMethods.signTransaction(requestManager, formattedTx, passphrase);\n});\nconst sign = (requestManager, data, address, passphrase) => __awaiter(void 0, void 0, void 0, function* () {\n    web3_validator__WEBPACK_IMPORTED_MODULE_3__.validator.validate(['string', 'address', 'string'], [data, address, passphrase]);\n    const dataToSign = (0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isHexStrict)(data) ? data : (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.utf8ToHex)(data);\n    return web3_rpc_methods__WEBPACK_IMPORTED_MODULE_4__.personalRpcMethods.sign(requestManager, dataToSign, address, passphrase);\n});\nconst ecRecover = (requestManager, signedData, signature) => __awaiter(void 0, void 0, void 0, function* () {\n    web3_validator__WEBPACK_IMPORTED_MODULE_3__.validator.validate(['string', 'string'], [signedData, signature]);\n    const signedDataString = (0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isHexStrict)(signedData) ? signedData : (0,web3_utils__WEBPACK_IMPORTED_MODULE_0__.utf8ToHex)(signedData);\n    return web3_rpc_methods__WEBPACK_IMPORTED_MODULE_4__.personalRpcMethods.ecRecover(requestManager, signedDataString, signature);\n});\n//# sourceMappingURL=rpc_method_wrappers.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2ViMy1ldGgtcGVyc29uYWwvbGliL2VzbS9ycGNfbWV0aG9kX3dyYXBwZXJzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsaUJBQWlCLFNBQUksSUFBSSxTQUFJO0FBQzdCLDRCQUE0QiwrREFBK0QsaUJBQWlCO0FBQzVHO0FBQ0Esb0NBQW9DLE1BQU0sK0JBQStCLFlBQVk7QUFDckYsbUNBQW1DLE1BQU0sbUNBQW1DLFlBQVk7QUFDeEYsZ0NBQWdDO0FBQ2hDO0FBQ0EsS0FBSztBQUNMO0FBQzBEO0FBQ2I7QUFDQTtBQUNXO0FBQ0Y7QUFDL0M7QUFDUCx5QkFBeUIsNEVBQThCO0FBQ3ZELHNCQUFzQix5REFBaUI7QUFDdkMsQ0FBQztBQUNNO0FBQ1AsSUFBSSxxREFBUztBQUNiLHlCQUF5QiwyRUFBNkI7QUFDdEQsV0FBVyw2REFBaUI7QUFDNUIsQ0FBQztBQUNNO0FBQ1AsSUFBSSxxREFBUztBQUNiLFdBQVcsOEVBQWdDO0FBQzNDLENBQUM7QUFDTTtBQUNQLElBQUkscURBQVM7QUFDYixXQUFXLDRFQUE4QjtBQUN6QyxDQUFDO0FBQ007QUFDUCxJQUFJLHFEQUFTO0FBQ2IsV0FBVyw2RUFBK0I7QUFDMUMsQ0FBQztBQUNNO0FBQ1Asd0JBQXdCLDJEQUFpQixLQUFLLHVEQUFlO0FBQzdEO0FBQ0EsS0FBSztBQUNMLFdBQVcsZ0ZBQWtDO0FBQzdDLENBQUM7QUFDTTtBQUNQLHdCQUF3QiwyREFBaUIsS0FBSyx1REFBZTtBQUM3RDtBQUNBLEtBQUs7QUFDTCxXQUFXLGdGQUFrQztBQUM3QyxDQUFDO0FBQ007QUFDUCxJQUFJLHFEQUFTO0FBQ2IsdUJBQXVCLDJEQUFXLGdCQUFnQixxREFBUztBQUMzRCxXQUFXLHFFQUF1QjtBQUNsQyxDQUFDO0FBQ007QUFDUCxJQUFJLHFEQUFTO0FBQ2IsNkJBQTZCLDJEQUFXLDRCQUE0QixxREFBUztBQUM3RSxXQUFXLDBFQUE0QjtBQUN2QyxDQUFDO0FBQ0QiLCJzb3VyY2VzIjpbIkU6XFx3ZWJcXFdFQjNcXHdlYjNfc29saWRpdHlfY29udHJhY3RfZXhhbXBsZVxccHVibGljXFxub2RlX21vZHVsZXNcXHdlYjMtZXRoLXBlcnNvbmFsXFxsaWJcXGVzbVxccnBjX21ldGhvZF93cmFwcGVycy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgX19hd2FpdGVyID0gKHRoaXMgJiYgdGhpcy5fX2F3YWl0ZXIpIHx8IGZ1bmN0aW9uICh0aGlzQXJnLCBfYXJndW1lbnRzLCBQLCBnZW5lcmF0b3IpIHtcbiAgICBmdW5jdGlvbiBhZG9wdCh2YWx1ZSkgeyByZXR1cm4gdmFsdWUgaW5zdGFuY2VvZiBQID8gdmFsdWUgOiBuZXcgUChmdW5jdGlvbiAocmVzb2x2ZSkgeyByZXNvbHZlKHZhbHVlKTsgfSk7IH1cbiAgICByZXR1cm4gbmV3IChQIHx8IChQID0gUHJvbWlzZSkpKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgICAgZnVuY3Rpb24gZnVsZmlsbGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yLm5leHQodmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxuICAgICAgICBmdW5jdGlvbiByZWplY3RlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvcltcInRocm93XCJdKHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gc3RlcChyZXN1bHQpIHsgcmVzdWx0LmRvbmUgPyByZXNvbHZlKHJlc3VsdC52YWx1ZSkgOiBhZG9wdChyZXN1bHQudmFsdWUpLnRoZW4oZnVsZmlsbGVkLCByZWplY3RlZCk7IH1cbiAgICAgICAgc3RlcCgoZ2VuZXJhdG9yID0gZ2VuZXJhdG9yLmFwcGx5KHRoaXNBcmcsIF9hcmd1bWVudHMgfHwgW10pKS5uZXh0KCkpO1xuICAgIH0pO1xufTtcbmltcG9ydCB7IHRvQ2hlY2tzdW1BZGRyZXNzLCB1dGY4VG9IZXggfSBmcm9tICd3ZWIzLXV0aWxzJztcbmltcG9ydCB7IGZvcm1hdFRyYW5zYWN0aW9uIH0gZnJvbSAnd2ViMy1ldGgnO1xuaW1wb3J0IHsgRVRIX0RBVEFfRk9STUFUIH0gZnJvbSAnd2ViMy10eXBlcyc7XG5pbXBvcnQgeyB2YWxpZGF0b3IsIGlzSGV4U3RyaWN0IH0gZnJvbSAnd2ViMy12YWxpZGF0b3InO1xuaW1wb3J0IHsgcGVyc29uYWxScGNNZXRob2RzIH0gZnJvbSAnd2ViMy1ycGMtbWV0aG9kcyc7XG5leHBvcnQgY29uc3QgZ2V0QWNjb3VudHMgPSAocmVxdWVzdE1hbmFnZXIpID0+IF9fYXdhaXRlcih2b2lkIDAsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgIGNvbnN0IHJlc3VsdCA9IHlpZWxkIHBlcnNvbmFsUnBjTWV0aG9kcy5nZXRBY2NvdW50cyhyZXF1ZXN0TWFuYWdlcik7XG4gICAgcmV0dXJuIHJlc3VsdC5tYXAodG9DaGVja3N1bUFkZHJlc3MpO1xufSk7XG5leHBvcnQgY29uc3QgbmV3QWNjb3VudCA9IChyZXF1ZXN0TWFuYWdlciwgcGFzc3dvcmQpID0+IF9fYXdhaXRlcih2b2lkIDAsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgIHZhbGlkYXRvci52YWxpZGF0ZShbJ3N0cmluZyddLCBbcGFzc3dvcmRdKTtcbiAgICBjb25zdCByZXN1bHQgPSB5aWVsZCBwZXJzb25hbFJwY01ldGhvZHMubmV3QWNjb3VudChyZXF1ZXN0TWFuYWdlciwgcGFzc3dvcmQpO1xuICAgIHJldHVybiB0b0NoZWNrc3VtQWRkcmVzcyhyZXN1bHQpO1xufSk7XG5leHBvcnQgY29uc3QgdW5sb2NrQWNjb3VudCA9IChyZXF1ZXN0TWFuYWdlciwgYWRkcmVzcywgcGFzc3dvcmQsIHVubG9ja0R1cmF0aW9uKSA9PiBfX2F3YWl0ZXIodm9pZCAwLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICB2YWxpZGF0b3IudmFsaWRhdGUoWydhZGRyZXNzJywgJ3N0cmluZycsICd1aW50J10sIFthZGRyZXNzLCBwYXNzd29yZCwgdW5sb2NrRHVyYXRpb25dKTtcbiAgICByZXR1cm4gcGVyc29uYWxScGNNZXRob2RzLnVubG9ja0FjY291bnQocmVxdWVzdE1hbmFnZXIsIGFkZHJlc3MsIHBhc3N3b3JkLCB1bmxvY2tEdXJhdGlvbik7XG59KTtcbmV4cG9ydCBjb25zdCBsb2NrQWNjb3VudCA9IChyZXF1ZXN0TWFuYWdlciwgYWRkcmVzcykgPT4gX19hd2FpdGVyKHZvaWQgMCwgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgdmFsaWRhdG9yLnZhbGlkYXRlKFsnYWRkcmVzcyddLCBbYWRkcmVzc10pO1xuICAgIHJldHVybiBwZXJzb25hbFJwY01ldGhvZHMubG9ja0FjY291bnQocmVxdWVzdE1hbmFnZXIsIGFkZHJlc3MpO1xufSk7XG5leHBvcnQgY29uc3QgaW1wb3J0UmF3S2V5ID0gKHJlcXVlc3RNYW5hZ2VyLCBrZXlEYXRhLCBwYXNzcGhyYXNlKSA9PiBfX2F3YWl0ZXIodm9pZCAwLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICB2YWxpZGF0b3IudmFsaWRhdGUoWydzdHJpbmcnLCAnc3RyaW5nJ10sIFtrZXlEYXRhLCBwYXNzcGhyYXNlXSk7XG4gICAgcmV0dXJuIHBlcnNvbmFsUnBjTWV0aG9kcy5pbXBvcnRSYXdLZXkocmVxdWVzdE1hbmFnZXIsIGtleURhdGEsIHBhc3NwaHJhc2UpO1xufSk7XG5leHBvcnQgY29uc3Qgc2VuZFRyYW5zYWN0aW9uID0gKHJlcXVlc3RNYW5hZ2VyLCB0eCwgcGFzc3BocmFzZSwgY29uZmlnKSA9PiBfX2F3YWl0ZXIodm9pZCAwLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICBjb25zdCBmb3JtYXR0ZWRUeCA9IGZvcm1hdFRyYW5zYWN0aW9uKHR4LCBFVEhfREFUQV9GT1JNQVQsIHtcbiAgICAgICAgdHJhbnNhY3Rpb25TY2hlbWE6IGNvbmZpZyA9PT0gbnVsbCB8fCBjb25maWcgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGNvbmZpZy5jdXN0b21UcmFuc2FjdGlvblNjaGVtYSxcbiAgICB9KTtcbiAgICByZXR1cm4gcGVyc29uYWxScGNNZXRob2RzLnNlbmRUcmFuc2FjdGlvbihyZXF1ZXN0TWFuYWdlciwgZm9ybWF0dGVkVHgsIHBhc3NwaHJhc2UpO1xufSk7XG5leHBvcnQgY29uc3Qgc2lnblRyYW5zYWN0aW9uID0gKHJlcXVlc3RNYW5hZ2VyLCB0eCwgcGFzc3BocmFzZSwgY29uZmlnKSA9PiBfX2F3YWl0ZXIodm9pZCAwLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICBjb25zdCBmb3JtYXR0ZWRUeCA9IGZvcm1hdFRyYW5zYWN0aW9uKHR4LCBFVEhfREFUQV9GT1JNQVQsIHtcbiAgICAgICAgdHJhbnNhY3Rpb25TY2hlbWE6IGNvbmZpZyA9PT0gbnVsbCB8fCBjb25maWcgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGNvbmZpZy5jdXN0b21UcmFuc2FjdGlvblNjaGVtYSxcbiAgICB9KTtcbiAgICByZXR1cm4gcGVyc29uYWxScGNNZXRob2RzLnNpZ25UcmFuc2FjdGlvbihyZXF1ZXN0TWFuYWdlciwgZm9ybWF0dGVkVHgsIHBhc3NwaHJhc2UpO1xufSk7XG5leHBvcnQgY29uc3Qgc2lnbiA9IChyZXF1ZXN0TWFuYWdlciwgZGF0YSwgYWRkcmVzcywgcGFzc3BocmFzZSkgPT4gX19hd2FpdGVyKHZvaWQgMCwgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgdmFsaWRhdG9yLnZhbGlkYXRlKFsnc3RyaW5nJywgJ2FkZHJlc3MnLCAnc3RyaW5nJ10sIFtkYXRhLCBhZGRyZXNzLCBwYXNzcGhyYXNlXSk7XG4gICAgY29uc3QgZGF0YVRvU2lnbiA9IGlzSGV4U3RyaWN0KGRhdGEpID8gZGF0YSA6IHV0ZjhUb0hleChkYXRhKTtcbiAgICByZXR1cm4gcGVyc29uYWxScGNNZXRob2RzLnNpZ24ocmVxdWVzdE1hbmFnZXIsIGRhdGFUb1NpZ24sIGFkZHJlc3MsIHBhc3NwaHJhc2UpO1xufSk7XG5leHBvcnQgY29uc3QgZWNSZWNvdmVyID0gKHJlcXVlc3RNYW5hZ2VyLCBzaWduZWREYXRhLCBzaWduYXR1cmUpID0+IF9fYXdhaXRlcih2b2lkIDAsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgIHZhbGlkYXRvci52YWxpZGF0ZShbJ3N0cmluZycsICdzdHJpbmcnXSwgW3NpZ25lZERhdGEsIHNpZ25hdHVyZV0pO1xuICAgIGNvbnN0IHNpZ25lZERhdGFTdHJpbmcgPSBpc0hleFN0cmljdChzaWduZWREYXRhKSA/IHNpZ25lZERhdGEgOiB1dGY4VG9IZXgoc2lnbmVkRGF0YSk7XG4gICAgcmV0dXJuIHBlcnNvbmFsUnBjTWV0aG9kcy5lY1JlY292ZXIocmVxdWVzdE1hbmFnZXIsIHNpZ25lZERhdGFTdHJpbmcsIHNpZ25hdHVyZSk7XG59KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJwY19tZXRob2Rfd3JhcHBlcnMuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/web3-eth-personal/lib/esm/rpc_method_wrappers.js\n");

/***/ })

};
;